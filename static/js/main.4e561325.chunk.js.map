{"version":3,"sources":["App.js","serviceWorker.js","index.js","image.png"],"names":["App","React","useState","currentPanel","setCurrentPanel","showDate","setShowDate","isReady","setIsReady","activePanel","id","centered","action","size","onClick","left","before","fill","header","subheader","asideMode","mode","background","style","boxSizing","backgroundColor","borderRadius","border","actions","align","marginTop","wifth","height","type","top","placeholder","onChange","event","target","value","name","defaultChecked","checked","width","backgroundImage","Image","backgroundPosition","backgroundSize","backgroundRepeat","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.4e561325.chunk.js","sourcesContent":["import React from \"react\";\n\nimport {\n  View,\n  Panel,\n  PanelHeader,\n  PanelHeaderBack,\n  Group,\n  Button,\n  Placeholder,\n  Banner,\n  FormLayout,\n  Div,\n  File,\n  Input,\n  Select,\n  Textarea,\n  FormLayoutGroup,\n  Radio,\n  Card,\n} from \"@vkontakte/vkui\";\nimport \"@vkontakte/vkui/dist/vkui.css\";\nimport Icon28TargetOutline from \"@vkontakte/icons/dist/28/target_outline\";\nimport Icon28CalendarOutline from \"@vkontakte/icons/dist/28/calendar_outline\";\nimport Icon56GalleryOutline from \"@vkontakte/icons/dist/56/gallery_outline\";\nimport Icon28CancelOutline from \"@vkontakte/icons/dist/28/cancel_outline\";\nimport Image from \"./image.png\";\n\nimport \"./App.css\";\n\nfunction App() {\n  const [currentPanel, setCurrentPanel] = React.useState(\"create\");\n  const [showDate, setShowDate] = React.useState(false);\n  const [isReady, setIsReady] = React.useState(false);\n\n  return (\n    <View activePanel={currentPanel}>\n      <Panel id=\"create\" centered=\"true\">\n        <PanelHeader>Пожертвования</PanelHeader>\n        <Group>\n          <Placeholder\n            action={\n              <Button size=\"m\" onClick={() => setCurrentPanel(\"selectType\")}>\n                Создать сбор\n              </Button>\n            }\n          >\n            У Вас пока нет сборов.\n            <br />\n            Начните доброе дело.\n          </Placeholder>\n        </Group>\n      </Panel>\n      <Panel id=\"selectType\" centered=\"true\">\n        <PanelHeader\n          left={<PanelHeaderBack onClick={() => setCurrentPanel(\"create\")} />}\n        >\n          Тип сбора\n        </PanelHeader>\n        <Group>\n          <Banner\n            before={<Icon28TargetOutline fill=\"3F8AE0\" />}\n            header=\"Целевой сбор\"\n            subheader=\"Когда есть определённая цель\"\n            asideMode=\"expand\"\n            onClick={() => setCurrentPanel(\"targetedDonation\")}\n          />\n          <Banner\n            before={<Icon28CalendarOutline fill=\"3F8AE0\" />}\n            header=\"Регулярный сбор\"\n            subheader=\"Если помощь нужна ежемесячно\"\n            asideMode=\"expand\"\n            onClick={() => setCurrentPanel(\"regularDonation\")}\n          />\n        </Group>\n      </Panel>\n      <Panel id=\"targetedDonation\">\n        <PanelHeader\n          left={\n            <PanelHeaderBack onClick={() => setCurrentPanel(\"selectType\")} />\n          }\n        >\n          Целевой сбор\n        </PanelHeader>\n        <Group>\n          <FormLayout>\n            <Banner\n              mode=\"image\"\n              size=\"m\"\n              background={\n                <div\n                  style={{\n                    boxSizing: \"border-box\",\n                    backgroundColor: \"#ffffff\",\n                    borderRadius: \"9px\",\n                    border: \"1.5px dashed #3F8AE0\",\n                  }}\n                />\n              }\n              actions={\n                <Group align=\"center\">\n                  <Div style={{ marginTop: \"0px\" }} />\n                  <File\n                    mode=\"tertiary\"\n                    before={\n                      <Icon56GalleryOutline\n                        wifth={28}\n                        height={28}\n                        fill=\"3F8AE0\"\n                      />\n                    }\n                  >\n                    Загрузить обложку\n                  </File>\n                  <Div />\n                </Group>\n              }\n            />\n            <Input\n              type=\"text\"\n              top=\"Название сбора\"\n              placeholder=\"Название сбора\"\n            />\n            <Input\n              type=\"number\"\n              top=\"Сумма, ₽\"\n              placeholder=\"Cколько нужно собрать?\"\n            />\n            <Input\n              type=\"text\"\n              top=\"Цель\"\n              placeholder=\"Например, лечение человека\"\n            />\n            <Textarea\n              top=\"Описание\"\n              placeholder=\"На что пойдут деньги и как они кому-то помогут?\"\n              onChange={(event) => {\n                event.target.value !== \"\" && event.target.value !== null\n                  ? setIsReady(true)\n                  : setIsReady(false);\n              }}\n            />\n            <Select top=\"Куда получать деньги\">\n              <option value=\"first\">Счет VK Pay • 1234</option>\n              <option value=\"second\">Счет VK Pay • 5678</option>\n            </Select>\n          </FormLayout>\n          <Div>\n            {isReady ? (\n              <Button\n                size=\"xl\"\n                onClick={() => {\n                  setCurrentPanel(\"targetedDonationAdditional\");\n                }}\n              >\n                Далее\n              </Button>\n            ) : (\n              <Button style={{ backgroundColor: \"#B6CFEB\" }} size=\"xl\">\n                Далее\n              </Button>\n            )}\n          </Div>\n          <Div />\n        </Group>\n      </Panel>\n      <Panel id=\"targetedDonationAdditional\">\n        <PanelHeader\n          left={\n            <PanelHeaderBack\n              onClick={() => {\n                setCurrentPanel(\"targetedDonation\");\n              }}\n            />\n          }\n        >\n          Дополнительно\n        </PanelHeader>\n        <Group>\n          <FormLayout>\n            <Select top=\"Автор\">\n              <option value=\"first\">Матвей Правосудов</option>\n              <option value=\"second\">Марк Никерин</option>\n            </Select>\n            <FormLayoutGroup top=\"Сбор завершится\">\n              <Radio\n                type=\"radio\"\n                name=\"radio\"\n                defaultChecked=\"true\"\n                onChange={(event) => {\n                  setShowDate(!event.target.checked);\n                }}\n              >\n                Когда соберём сумму\n              </Radio>\n              <Radio\n                type=\"radio\"\n                name=\"radio\"\n                onChange={(event) => {\n                  setShowDate(event.target.checked);\n                  setIsReady(false);\n                }}\n              >\n                В определенную дату\n              </Radio>\n            </FormLayoutGroup>\n            {showDate && (\n              <Select\n                top=\"Дата окончания\"\n                placeholder=\"Выберите дату\"\n                onChange={() => setIsReady(true)}\n              >\n                <option value=\"first\">20 сентября</option>\n                <option value=\"first\">30 сентября</option>\n              </Select>\n            )}\n          </FormLayout>\n          <Div>\n            {isReady ? (\n              <Button\n                size=\"xl\"\n                onClick={() => {\n                  setCurrentPanel(\"snippet\");\n                  setIsReady(false);\n                }}\n              >\n                Создать сбор\n              </Button>\n            ) : (\n              <Button style={{ backgroundColor: \"#B6CFEB\" }} size=\"xl\">\n                Создать сбор\n              </Button>\n            )}\n          </Div>\n          <Div />\n        </Group>\n      </Panel>\n      <Panel id=\"regularDonation\">\n        <PanelHeader\n          left={\n            <PanelHeaderBack onClick={() => setCurrentPanel(\"selectType\")} />\n          }\n        >\n          Регулярный сбор\n        </PanelHeader>\n        <Group>\n          <FormLayout>\n            <Banner\n              mode=\"image\"\n              size=\"m\"\n              background={\n                <div\n                  style={{\n                    boxSizing: \"border-box\",\n                    backgroundColor: \"#ffffff\",\n                    borderRadius: \"9px\",\n                    border: \"1.5px dashed #3F8AE0\",\n                  }}\n                />\n              }\n              actions={\n                <Group align=\"center\">\n                  <Div style={{ marginTop: \"0px\" }} />\n                  <File\n                    mode=\"tertiary\"\n                    before={\n                      <Icon56GalleryOutline\n                        wifth={28}\n                        height={28}\n                        fill=\"3F8AE0\"\n                      />\n                    }\n                  >\n                    Загрузить обложку\n                  </File>\n                  <Div />\n                </Group>\n              }\n            />\n            <Input\n              type=\"text\"\n              top=\"Название сбора\"\n              placeholder=\"Название сбора\"\n            />\n            <Input\n              type=\"number\"\n              top=\"Сумма, ₽\"\n              placeholder=\"Cколько нужно в месяц?\"\n            />\n            <Input\n              type=\"text\"\n              top=\"Цель\"\n              placeholder=\"Например, поддержка приюта\"\n            />\n            <Textarea\n              top=\"Описание\"\n              placeholder=\"На что пойдут деньги и как они кому-то помогут?\"\n              onChange={(event) => {\n                event.target.value !== \"\" && event.target.value !== null\n                  ? setIsReady(true)\n                  : setIsReady(false);\n              }}\n            />\n            <Select top=\"Куда получать деньги\">\n              <option value=\"first\">Счет VK Pay • 1234</option>\n              <option value=\"second\">Счет VK Pay • 5678</option>\n            </Select>\n            <Select top=\"Автор\">\n              <option value=\"first\">Матвей Правосудов</option>\n              <option value=\"second\">Марк Никерин</option>\n            </Select>\n          </FormLayout>\n          <Div>\n            {isReady ? (\n              <Button\n                size=\"xl\"\n                onClick={() => {\n                  setCurrentPanel(\"snippet\");\n                  setIsReady(false);\n                }}\n              >\n                Создать сбор\n              </Button>\n            ) : (\n              <Button style={{ backgroundColor: \"#B6CFEB\" }} size=\"xl\">\n                Создать сбор\n              </Button>\n            )}\n          </Div>\n          <Div />\n        </Group>\n      </Panel>\n      <Panel id=\"snippet\" centered=\"true\">\n        <PanelHeader left={<Icon28CancelOutline />}>Сниппет</PanelHeader>\n        <Group>\n          <Card mode=\"outline\" size=\"l\">\n            <div style={{ width: \"90vw\", height: \"350px\" }}>\n            <Banner\n              mode=\"image\"\n              size=\"m\"\n              background={\n                <div\n                  style={{\n                    backgroundImage: `url(${Image})`,\n                    backgroundPosition: 'right bottom',\n                    backgroundSize: '102%',\n                    backgroundRepeat: 'no-repeat',\n                  }}\n                />\n              }\n            />\n            </div>\n          </Card>\n        </Group>\n      </Panel>\n    </View>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/image.e22c4f7c.png\";"],"sourceRoot":""}